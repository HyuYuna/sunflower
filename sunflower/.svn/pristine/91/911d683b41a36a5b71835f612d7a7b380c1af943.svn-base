<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="site.unp.cms.dao.member.MemberDAO">

	<sql id="UserMember-where">
		<if test='userTyCd != null and userTyCd != ""'>
			<![CDATA[	AND A.USER_TY_CD = #{userTyCd} 		]]>
		</if>
		<if test='sttusCd != null and sttusCd != ""'>
			<![CDATA[	AND A.STTUS_CD = #{sttusCd} 		]]>
		</if>
		<if test='searchWrd != null and searchWrd != ""'>
			<if test='searchCnd == "1"'>
				<![CDATA[	AND A.USER_NM LIKE '%' || #{searchWrd} || '%' 		]]>
			</if>
			<if test='searchCnd == "2"'>
				<![CDATA[	AND A.USER_ID LIKE '%' || #{searchWrd} || '%' 		]]>
			</if>
			<if test='searchCnd == "3"'>
				<![CDATA[	AND A.USER_CPNO LIKE '%' || #{searchWrd} || '%' 		]]>
			</if>
			<if test='searchCnd == "4"'>
				<![CDATA[	AND A.USER_EMAD LIKE '%' || #{searchWrd} || '%' 		]]>
			</if>
		</if>
	</sql>

	<select id="countUserMember" parameterType="zvl" resultType="long" >
		<![CDATA[
			SELECT
				COUNT(A.USER_ID)
			FROM TM_USER_INFO A
			WHERE 1=1
		]]>
		<include refid="UserMember-where" />
	</select>

	<select id="findAllUserMember" parameterType="zvl" resultType="zvl" >
		<![CDATA[
			SELECT  *
			  FROM  (
			SELECT ROWNUM RNUM, ALL_LIST.*
			  FROM  (

				SELECT
					 A.USER_ID
					, A.USER_SN
					, A.PASSWORD
					, A.USER_TY_CD
					, A.USER_NM
					, A.USER_EMAD
					, A.USER_CPNO
					, A.USER_TELNO
	                , A.USER_ZIP
					, A.USER_ADRES1
					, A.USER_ADRES2
					, A.EMAIL_RECPTN_AT
					, A.SMS_RECPTN_AT
					, A.ENTRPRS_NO
					, A.STTUS_CD
					, A.AUTHOR_CD
					, A.MNG_AT
					, A.ENT_AT
					, A.SEAT_NO
					, A.ATCH_FILE_ID
					, A.SITE_ID
					, A.DELETE_CD
					, A.USE_AT
					, A.REGIST_ID
					, A.REGIST_DT
					, A.UPDT_ID
					, A.UPDT_DT
					, A.DEPT_ID
					, A.LAST_LOGIN_DT
					, A.PASSWORD_CHANGE_DT
					, A.STPLAT_AGRE_DT
					, B.USER_PIN
					, B.CRTFC_SE_CD
					, B.CHLD_CRTFC_AT
					, B.BRTHDY
					, B.SEX_CD
				FROM TM_USER_INFO A
				LEFT OUTER JOIN TM_USER_PIN B ON B.USER_SN = A.USER_SN
				WHERE 1=1
			]]>
				<include refid="UserMember-where" />
			<![CDATA[
				ORDER BY A.REGIST_DT DESC

				    ) ALL_LIST
				    )
			 WHERE  RNUM  > #{firstIndex}
			   AND  RNUM <= #{firstIndex} + #{recordCountPerPage}
		]]>
	</select>

	<select id="findOneUserMember" parameterType="zvl" resultType="zvl">
		<![CDATA[
			SELECT
                  A.USER_ID
                 , A.USER_SN
                 , A.PASSWORD
                 , A.USER_TY_CD
                 , A.USER_NM
                 , A.USER_EMAD
                 , A.USER_CPNO
                 , A.USER_TELNO
                 , A.USER_ZIP
				 , A.USER_ADRES1
				 , A.USER_ADRES2
                 , A.EMAIL_RECPTN_AT
                 , A.SMS_RECPTN_AT
                 , A.ENTRPRS_NO
                 , A.STTUS_CD
                 , A.AUTHOR_CD
                 , A.MNG_AT
                 , A.ENT_AT
                 , A.SEAT_NO
                 , A.ATCH_FILE_ID
                 , A.SITE_ID
                 , A.DELETE_CD
                 , A.USE_AT
                 , A.REGIST_ID
                 , A.REGIST_DT
                 , A.UPDT_ID
                 , A.UPDT_DT
                 , A.DEPT_ID
				 , A.LAST_LOGIN_DT
				 , A.PASSWORD_CHANGE_DT
				 , A.STPLAT_AGRE_DT
				 , B.USER_PIN
				 , B.CRTFC_SE_CD
				 , B.CHLD_CRTFC_AT
				 , B.BRTHDY
				 , B.SEX_CD
			FROM TM_USER_INFO A
			LEFT OUTER JOIN TM_USER_PIN B ON B.USER_SN = A.USER_SN
			WHERE
				A.USER_ID = #{userId}
		]]>
	</select>

	<insert id="saveUserMember" parameterType="zvl">
		<selectKey resultType="Integer" order="BEFORE" keyProperty="userSn">
			SELECT NVL(MAX(USER_SN),0)+1 AS USER_SN FROM TM_USER_PIN
		</selectKey>
		<![CDATA[
		     INSERT INTO TM_USER_INFO (
                  USER_ID
                 , USER_SN
                 , PASSWORD
                 , USER_TY_CD
                 , USER_NM
                 , USER_EMAD
                 , USER_CPNO
                 , USER_TELNO
                 , USER_ZIP
				 , USER_ADRES1
				 , USER_ADRES2
                 , EMAIL_RECPTN_AT
                 , SMS_RECPTN_AT
                 , ENTRPRS_NO
                 , STTUS_CD
                 , AUTHOR_CD
                 , MNG_AT
                 , ENT_AT
                 , SEAT_NO
                 , ATCH_FILE_ID
                 , SITE_ID
                 , DELETE_CD
                 , USE_AT
                 , REGIST_ID
                 , REGIST_DT
                 , UPDT_ID
                 , UPDT_DT
                 , DEPT_ID
		     )
			VALUES (
				 #{userId}
				, #{userSn}
				, #{password}
				, #{userTyCd}
				, #{userNm}
				, #{userEmad}
				, #{userCpno}
				, #{userTelno}
                , #{userZip}
				, #{userAdres1}
				, #{userAdres2}
				, #{emailRecptnAt}
				, #{smsRecptnAt}
				, #{entrprsNo}
				, #{sttusCd}
				, #{authorCd}
				, NVL(#{mngAt}, 'N')
				, NVL(#{entAt}, 'N')
				, #{seatNo}
				, #{atchFileId}
				, #{siteId}
				, NVL(#{deleteCd}, '0')
				, NVL(#{userAt}, 'Y')
				, #{userId}
				, SYSDATE
				, #{userId}
				, SYSDATE
				, #{deptId}
			)
		]]>
	</insert>

	<update id="updateUserMember" parameterType="zvl">
		<![CDATA[
		     UPDATE TM_USER_INFO
			 SET
                 USER_TY_CD = #{userTyCd}
                 ,USER_CPNO = #{userCpno}
                 ,USER_TELNO = #{userTelno}
                 ,USER_ZIP = #{userZip}
                 ,USER_ADRES1 = #{userAdres1}
                 ,USER_ADRES2 = #{userAdres2}
                 ,EMAIL_RECPTN_AT = #{emailRecptnAt}
                 ,SMS_RECPTN_AT = #{smsRecptnAt}
                 ,ATCH_FILE_ID = #{atchFileId}
                 ,UPDT_ID = #{updtId}
                 ,UPDT_DT = SYSDATE
                 ,DEPT_ID = #{deptId}
		]]>
		<if test='encodedPwd != null and encodedPwd != ""'>
			<![CDATA[	,PASSWORD = #{encodedPwd} 		]]>
		</if>
		<![CDATA[
			 WHERE USER_ID = #{userId}
		]]>
	</update>

	<delete id="deleteUserMember" parameterType="zvl">
		<![CDATA[
		     DELETE FROM TM_USER_INFO
			 WHERE USER_ID = #{userId}
		]]>
	</delete>

	<delete id="deleteUserPin" parameterType="zvl">
		<![CDATA[
		     DELETE FROM TM_USER_PIN
			 WHERE USER_SN = #{userSn}
		]]>
	</delete>

	<select id="countUserMemberByUserId" parameterType="string" resultType="long" >
		<![CDATA[
			SELECT SUM(USER_ID_CNT) FROM
			(
				SELECT COUNT(USER_ID) AS USER_ID_CNT
				FROM TM_USER_INFO
				WHERE USER_ID = #{userId}

				UNION ALL

				SELECT COUNT(USER_ID) AS USER_ID_CNT
				FROM TM_USER_SECSN
				WHERE USER_ID = #{userId}
			) M
		]]>
	</select>

	<!-- 아이디 중복체크(휴면계정에서 찾기) : 해당 테이블의 별도의 DB에 존재할 경우 해당 쿼리를 해당 DB으로 변경 -->
	<select id="countUserDrmncyByUserId" parameterType="string" resultType="long" >
		<![CDATA[
			/* countUserDrmncyByUserId */
			SELECT COUNT(USER_ID) AS USER_ID_CNT
			FROM TM_USER_DRMNCY
			WHERE USER_ID = #{userId}
		]]>
	</select>

	<!-- 아이디 찾기(휴면계정에서 찾기) : 해당 테이블의 별도의 DB에 존재할 경우 해당 쿼리를 해당 DB으로 변경 -->
	<select id="idSearchFinishDrmncy" parameterType="string" resultType="long" >
		<![CDATA[
			/* idSearchFinishDrmncy */
			SELECT
				A.USER_ID
				, A.USER_NM
				, B.USER_PIN
			FROM TM_USER_DRMNCY A
			LEFT OUTER JOIN TM_USER_PIN B ON B.USER_SN = A.USER_SN
			WHERE 1 = 1
			AND B.USER_PIN = #{userPin}
		]]>
	</select>

	<!-- 비밀번호 찾기(휴면계정에서 찾기) : 해당 테이블의 별도의 DB에 존재할 경우 해당 쿼리를 해당 DB으로 변경 -->
	<select id="findOneUserDrmncyIdSearchFinish" parameterType="string" resultType="long" >
		<![CDATA[
			/* findOneUserDrmncyIdSearchFinish */
			SELECT
				A.USER_ID
				, A.USER_NM
				, B.USER_PIN
			FROM TM_USER_DRMNCY A
			LEFT OUTER JOIN TM_USER_PIN B ON B.USER_SN = A.USER_SN
			WHERE 1 = 1
			AND B.USER_PIN = #{userPin}
		]]>
	</select>




	<select id="countUserMemberByUserPin" parameterType="string" resultType="long" >
		<![CDATA[
			/* countUserMemberByUserPin */
			SELECT COUNT(USER_SN)
			FROM TM_USER_PIN
			WHERE USER_PIN = #{userPin}
		]]>
	</select>

	<select id="findOneUserMemberByUserPin" parameterType="zvl" resultType="zvl" >
		<![CDATA[
			/* findOneUserMemberByUserPin */
			SELECT *
			FROM TM_USER_PIN
			WHERE USER_PIN = #{userPin}
		]]>
	</select>

	<select id="countUserMemberByUserPinId" parameterType="string" resultType="long" >
		<![CDATA[
			/* countUserMemberByUserPinId */
			SELECT COUNT(A.USER_PIN) FROM TM_USER_PIN A, TM_USER_INFO B
			WHERE A.USER_SN = B.USER_SN
			AND A.USER_PIN = #{userPin}
		]]>
	</select>

	<select id="findOneUserMemberByUserPinInfo" parameterType="string" resultType="zvl" >
		<![CDATA[
			/* findOneUserMemberByUserPinInfo */
			SELECT A.USER_SN, A.USER_PIN, A.USER_NM, B.USER_ID FROM TM_USER_PIN A, TM_USER_INFO B
			WHERE A.USER_SN = B.USER_SN
			AND A.USER_PIN = #{userPin}
		]]>
	</select>

	<insert id="saveUserMemberUserPin" parameterType="zvl">
		<selectKey resultType="Integer" order="BEFORE" keyProperty="userSn">
			SELECT NVL(MAX(USER_SN),0)+1 AS USER_SN FROM TM_USER_PIN
		</selectKey>
		<![CDATA[
			INSERT INTO TM_USER_PIN (
				USER_SN
				, USER_PIN
				, USER_NM
				, CRTFC_SE_CD
				, CHLD_CRTFC_AT
				, REGIST_DT
				, UPDT_DT
				, BRTHDY
				, SEX_CD
				, SITE_SE_CD
		     )
			VALUES (
				#{userSn}
				, #{userPin}
				, #{userNm}
				, #{crtfcSeCd}
				, #{chldCrtfcAt}
				, SYSDATE
				, SYSDATE
				, #{brthdy}
				, #{sexCd}
				, #{siteSeCd}
			)
		]]>
	</insert>

	<select id="findOneUserMemberUserPin" resultType="zvl">
		<![CDATA[
			SELECT
				USER_SN
				, USER_PIN
				, USER_NM
				, CRTFC_SE_CD
				, CHLD_CRTFC_AT
				, REGIST_DT
				, UPDT_DT
				, BRTHDY
				, SEX_CD
			FROM TM_USER_PIN
			WHERE A.USER_PIN = #{userPin}
		]]>
	</select>

	<select id="findOneUserMemberLoginInfo" resultType="zvl">
		<![CDATA[
			SELECT A.USER_ID AS username,
				   A.USER_NM,
			       A.USER_SN,
			       A.PASSWORD,
			       A.STTUS_CD,
			       SYSDATE>DATE_ADD(NVL(PASSWORD_CHANGE_DT,REGIST_DT), INTERVAL +6 MONTH) AS  PASSWORD_CHANGE_AT,
			       CASE WHEN PASSWORD_DERIVE_DT IS NULL THEN 1 ELSE  SYSDATE>DATE_ADD(PASSWORD_DERIVE_DT, INTERVAL +3 MONTH) END PASSWORD_DERIVE_AT
			FROM TM_USER_INFO A
			WHERE A.USER_ID = #{username}
		]]>
	</select>

	<!-- 휴면계정에서 사용자 정보 찾기 : DB 분리인 경우 감안하여 작업 -->
	<select id="findOneUserDrmncyMemberLoginInfo" resultType="zvl">
		<![CDATA[
			SELECT A.USER_ID AS username,
				   A.USER_NM,
			       A.USER_SN,
			       A.PASSWORD,
			       A.STTUS_CD,
			       SYSDATE>DATE_ADD(NVL(PASSWORD_CHANGE_DT,REGIST_DT), INTERVAL +6 MONTH) AS  PASSWORD_CHANGE_AT,
			       CASE WHEN PASSWORD_DERIVE_DT IS NULL THEN 1 ELSE  SYSDATE>DATE_ADD(PASSWORD_DERIVE_DT, INTERVAL +3 MONTH) END PASSWORD_DERIVE_AT
			FROM TM_USER_DRMNCY A
			WHERE A.USER_ID = #{username}
		]]>
	</select>

	<select id="findOneMemberLoginSaltInfo" resultType="zvl">
		<![CDATA[
			SELECT A.SALT
			FROM TM_USER_SALT A
			WHERE A.USER_ID = #{username}
		]]>
		<choose>
			<when test='userSe != null and userSe != ""'><![CDATA[AND USER_SE = #{userSe}]]></when>
			<otherwise><![CDATA[AND USER_SE='U']]></otherwise>
		</choose>
	</select>

 	<update id="updateUserMemberLastLoginDt" parameterType="zvl" >
 		<![CDATA[
			UPDATE TM_USER_INFO SET
				LAST_LOGIN_DT = SYSDATE
			WHERE USER_ID = #{userId}
 		]]>
 	</update>

	<update id="updateUserMemberPasswordDeriveDt" parameterType="zvl">
		<![CDATA[
			UPDATE TM_USER_INFO
			SET PASSWORD_DERIVE_DT = SYSDATE
			WHERE USER_ID = #{userId}
		]]>
	</update>

	<update id="updateUserMemberPassword" parameterType="zvl">
		<![CDATA[
			UPDATE TM_USER_INFO
			SET PASSWORD = #{encodedPassword}, PASSWORD_CHANGE_DT = SYSDATE
			WHERE USER_ID = #{userId}
		]]>
	</update>

	<update id="updateUserMemberPasswordByUserSn" parameterType="zvl">
		<![CDATA[
			UPDATE TM_USER_INFO
			SET PASSWORD = #{encodedPassword}, PASSWORD_CHANGE_DT = SYSDATE
			WHERE USER_SN = #{userSn}
		]]>
	</update>

	<update id="updateUserMemberSttusCd" parameterType="zvl">
		<![CDATA[
			UPDATE TM_USER_INFO
			SET STTUS_CD = #{sttusCd}
			WHERE USER_ID = #{userId}
		]]>
	</update>

	<select id="selectStringUserMemberIdSearchRequest" parameterType="zvl" resultType="string">
		<![CDATA[
			SELECT
				A.USER_ID
				, A.USER_EMAD
				, B.USER_PIN
			FROM TM_USER_INFO A
			LEFT OUTER JOIN TM_USER_PIN B ON B.USER_SN = A.USER_SN
			WHERE 1 = 1
		]]>
		<if test='userNm != null and userNm != ""'>
			<![CDATA[	AND A.USER_NM = #{userNm}	]]>
		</if>
		<if test='userEmad != null and userEmad != ""'>
			<![CDATA[	AND A.USER_EMAD = #{userEmad}	]]>
		</if>
		<if test='userPin != null and userPin != ""'>
			<![CDATA[	AND B.USER_PIN = #{userPin}	]]>
		</if>
	</select>

	<select id="findOneUserMemberIdPwdSearchRequest" parameterType="zvl" resultType="zvl">
		<![CDATA[
			SELECT
				A.USER_ID
				, A.USER_EMAD
				, B.USER_PIN
			FROM TM_USER_INFO A
			LEFT OUTER JOIN TM_USER_PIN B ON B.USER_SN = A.USER_SN
			WHERE 1 = 1
		]]>
		<if test='userNm != null and userNm != ""'>
			<![CDATA[	AND A.USER_NM = #{userNm}	]]>
		</if>
		<if test='userId != null and userId != ""'>
			<![CDATA[	AND A.USER_ID = #{userId}	]]>
		</if>
		<if test='userEmad != null and userEmad != ""'>
			<![CDATA[	AND A.USER_EMAD = #{userEmad}	]]>
		</if>
		<if test='userPin != null and userPin != ""'>
			<![CDATA[	AND B.USER_PIN = #{userPin}	]]>
		</if>
	</select>

	<select id="findOneUserMemberIdSearchFinish" parameterType="zvl" resultType="zvl">
		<![CDATA[
			SELECT
				A.USER_ID
				, A.USER_NM
				, B.USER_PIN
			FROM TM_USER_INFO A
			LEFT OUTER JOIN TM_USER_PIN B ON B.USER_SN = A.USER_SN
			WHERE 1 = 1
			AND B.USER_PIN = #{userPin}
		]]>
	</select>

	<insert id="saveUserMemberSecsn" parameterType="zvl" >
		<selectKey resultType="Integer" order="BEFORE" keyProperty="mnno">
			SELECT NVL(MAX(MNNO),0)+1 AS MNNO FROM TM_USER_SECSN
		</selectKey>
		<![CDATA[
 			INSERT INTO TM_USER_SECSN (
 				MNNO, USER_ID, USER_NM, USER_SECSN_DT, USER_SECSN_MEMO
 			)
			VALUES (
				#{mnno}, #{userId}, #{userNm}, SYSDATE, #{userSecsnMemo}
			)
		]]>
	</insert>

	<update id="updateUserPinInfo" parameterType="zvl">
		<![CDATA[
			UPDATE TM_USER_PIN
			SET SEX_CD = #{sexCd}
			, BRTHDY = #{brthdy}
			WHERE USER_PIN = #{userPin}
		]]>
	</update>

	<delete id="deleteMemberSaltInfo" parameterType="zvl">
 		<![CDATA[
			DELETE FROM TM_USER_SALT
			WHERE USER_ID = #{userId}
			AND USER_SE = #{userSe}
 		]]>
	</delete>

	<insert id="saveMemberSalfInfo" parameterType="zvl" >
		<selectKey resultType="Integer" order="BEFORE" keyProperty="userNo">
			SELECT NVL(MAX(USER_NO),0)+1 AS USER_NO FROM TM_USER_SALT
		</selectKey>
		<![CDATA[
 			INSERT INTO TM_USER_SALT (
 				USER_NO, USER_SN, SALT, USER_SE, USER_ID, USER_NM, REGIST_DT
 			)
			VALUES (
				#{userNo}, #{userSn}, #{salt} , #{userSe}, #{userId}, #{userNm}, SYSDATE
			)
		]]>
	</insert>

</mapper>
