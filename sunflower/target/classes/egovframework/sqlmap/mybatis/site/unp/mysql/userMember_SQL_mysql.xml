<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="site.unp.cms.dao.member.MemberDAO">

    <sql id="UserMember-where">
       <if test='searchCnd1 != null and searchCnd1 != ""'>
            <![CDATA[
            AND UPPER(SUBSTR(A.CENTER_CODE, 1, 1)) LIKE CONCAT(trim(UPPER(#{searchCnd1})), '%')
            ]]>
        </if>
        <if test='searchCnd2 != null and searchCnd2 != ""'>
            <![CDATA[
            AND UPPER(A.CENTER_CODE) LIKE CONCAT('%',trim(UPPER(#{searchCnd2})), '%')
            ]]>
        </if>
        <if test='searchCnd3 != null and searchCnd3 != ""'>
            <![CDATA[
            AND A.USER_LEVEL LIKE #{searchCnd3}
            ]]>
        </if>
        <if test='searchCnd4 != null and searchCnd4 != ""'>
            <![CDATA[
            AND A.USER_GROUP LIKE #{searchCnd4}
            ]]>
        </if>
        <if test='searchCnd5 != null and searchCnd5 != ""'>
            <![CDATA[
            AND A.USER_STATE LIKE #{searchCnd5}
            ]]>
        </if>
        <if test='searchWrd != null and searchWrd != ""'>
            <![CDATA[
             AND UPPER(A.USER_NAME) LIKE CONCAT('%',trim(UPPER(#{searchWrd})), '%')
            ]]>
        </if>
         <if test='searchWrd2 != null and searchWrd2 != ""'>
            <![CDATA[
             AND UPPER(A.USER_ID) LIKE CONCAT('%',trim(UPPER(#{searchWrd2})), '%')
            ]]>
        </if>
        <if test="sdate != null and sdate != ''">
            <![CDATA[   AND REPLACE(COALESCE(IF(NULLIF(A.USER_BDATE, ' ') IS NULL, NULL, A.USER_BDATE), DATE_FORMAT(A.USER_CDATE, '%Y%m%d')),'-','') >= REPLACE(#{sdate},'-','')       ]]>
        </if>
        <if test="edate != null and edate != ''">
            <![CDATA[   AND REPLACE(COALESCE(IF(NULLIF(A.USER_BDATE, ' ') IS NULL, NULL, A.USER_BDATE), DATE_FORMAT(A.USER_CDATE, '%Y%m%d')),'-','') <= REPLACE(#{edate},'-','')       ]]>
        </if>
        <if test='userTyCd != null and userTyCd != ""'>
            <![CDATA[   AND A.USER_TY_CD = #{userTyCd}      ]]>
        </if>
        <if test='sttusCd != null and sttusCd != ""'>
            <![CDATA[   AND A.STTUS_CD = #{sttusCd}         ]]>
        </if>
        <if test='loginCenterCode != null and loginCenterCode != ""'>
            <if test='loginAuthorCd != "ROLE_SUPER" and loginAuthorCd != "CA" and loginAuthorCd != "CU"'>
              <![CDATA[   AND A.CENTER_CODE = #{loginCenterCode}    ]]>
            </if>
        </if> 
        <if test='chGroup != null and chGroup != ""'>
            <![CDATA[   AND B.CH_GROUP = #{chGroup}         ]]>
        </if>
         <if test='chAction != null and chAction != ""'>
            <![CDATA[   AND B.CH_ACTION = #{chAction}         ]]>
        </if>
    </sql>
    
    <sql id="UserMember-where2">
       <if test='searchCnd1 != null and searchCnd1 != ""'>
            <![CDATA[
            AND UPPER(SUBSTR(A.CENTER_CODE, 1, 1)) LIKE CONCAT(trim(UPPER(#{searchCnd1})), '%')
            ]]>
        </if>
        <if test='searchCnd2 != null and searchCnd2 != ""'>
            <![CDATA[
            AND UPPER(A.CENTER_CODE) LIKE CONCAT('%',trim(UPPER(#{searchCnd2})), '%')
            ]]>
        </if>
        <if test='searchCnd3 != null and searchCnd3 != ""'>
            <![CDATA[
            AND A.USER_LEVEL LIKE #{searchCnd3}
            ]]>
        </if>
        <if test='searchCnd4 != null and searchCnd4 != ""'>
            <![CDATA[
            AND A.USER_GROUP LIKE #{searchCnd4}
            ]]>
        </if>
        <if test='searchCnd5 != null and searchCnd5 != ""'>
            <![CDATA[
            AND A.USER_STATE LIKE #{searchCnd5}
            ]]>
        </if>
        <if test='searchWrd != null and searchWrd != ""'>
            <![CDATA[
             AND UPPER(A.USER_NAME) LIKE CONCAT('%',trim(UPPER(#{searchWrd})), '%')
            ]]>
        </if>
         <if test='searchWrd2 != null and searchWrd2 != ""'>
            <![CDATA[
             AND UPPER(A.USER_ID) LIKE CONCAT('%',trim(UPPER(#{searchWrd2})), '%')
            ]]>
        </if>
        <if test="sdate != null and sdate != ''">
            <![CDATA[   AND DATE_FORMAT(A.USER_PDATE, '%Y%m%d') >= REPLACE(#{sdate},'-','')       ]]>
        </if>
        <if test="edate != null and edate != ''">
            <![CDATA[   AND DATE_FORMAT(A.USER_PDATE, '%Y%m%d') <= REPLACE(#{edate},'-','')       ]]>
        </if>
        <if test='userTyCd != null and userTyCd != ""'>
            <![CDATA[   AND A.USER_TY_CD = #{userTyCd}      ]]>
        </if>
        <if test='sttusCd != null and sttusCd != ""'>
            <![CDATA[   AND A.STTUS_CD = #{sttusCd}         ]]>
        </if>
        <if test='loginCenterCode != null and loginCenterCode != ""'>
            <if test='loginAuthorCd != "ROLE_SUPER" and loginAuthorCd != "CA" and loginAuthorCd != "CU"'>
              <![CDATA[   AND A.CENTER_CODE = #{loginCenterCode}    ]]>
            </if>
        </if> 
    </sql>
    
    <sql id="UserMember-order">
       <if test='orderName == "" or orderName == null or orderBdate == "" or orderBdate == null'>
        <![CDATA[
            ORDER BY A.USER_NAME ASC
            ]]>
       </if>
       <if test='orderName == "ASC" and orderName != null'>
        <![CDATA[
            ORDER BY A.USER_NAME ASC
            ]]>
        </if>
        <if test='orderName == "DESC" and orderName != null'>
        <![CDATA[
            ORDER BY A.USER_NAME DESC
            ]]>
        </if>
        <if test='orderBdate == "ASC" and orderBdate != null'>
        <![CDATA[
            ORDER BY userBCdate ASC
            ]]>
        </if>
        <if test='orderBdate == "DESC" and orderBdate != null'>
        <![CDATA[
            ORDER BY userBCdate DESC
            ]]>
        </if>
    </sql>

    <select id="findAllCenterByCodeG" parameterType="zvl" resultType="zvl" >
        <![CDATA[
            /* findAllCenterByCodeG */
            SELECT CODE_NAME, CODE_CODE 
            FROM TB_CODE
            WHERE CODEG_CODE = 'CM05'
                  AND CODE_GROUP LIKE CONCAT('%',trim(#{centerGbn}), '%')
                  AND CODE_USE_YN='Y' 
            ORDER BY CODE_SORT;
        ]]>
    </select>
    <select id="countUserMember" parameterType="zvl" resultType="long" >
        <![CDATA[
            SELECT
                COUNT(A.USER_ID)
            FROM TA_USER A
            WHERE 1=1
        ]]>
        <include refid="UserMember-where" />
    </select>

    <!-- 유저 리스트, 이름 정렬 -->
    <select id="findAllUserMember" parameterType="zvl" resultType="zvl" >
        <![CDATA[
            /*findAllUserMember*/
            SELECT  A.*,  
                    COALESCE(IF(NULLIF(A.USER_BDATE, ' ') IS NULL, NULL, A.USER_BDATE), DATE_FORMAT(A.USER_CDATE, '%Y-%m-%d')) AS userBCdate,
                    CASE WHEN length(A.CENTER_CODE2) > 0 AND length(A.CENTER_CODE3) = 0
                     	  THEN CONCAT(FN_GET_CODE_NAME('CM05', A.CENTER_CODE),',',FN_GET_CODE_NAME('CM05', A.CENTER_CODE2)) 
                    	 WHEN length(A.CENTER_CODE2) > 0 AND length(A.CENTER_CODE3)  > 0 
                     	  THEN CONCAT(FN_GET_CODE_NAME('CM05', A.CENTER_CODE),',',FN_GET_CODE_NAME('CM05', A.CENTER_CODE2),',',FN_GET_CODE_NAME('CM05', A.CENTER_CODE3)) 
                     ELSE FN_GET_CODE_NAME('CM05', A.CENTER_CODE)
                    END AS 	centerCodeName ,
                    FN_GET_CODE_NAME('CDOP', A.USER_GROUP) AS userGroupName,
                    FN_GET_CODE_NAME('USLV', A.USER_LEVEL) AS userLevelName,
                    FN_GET_CODE_NAME('USST', A.USER_STATE) AS userStateName,
                    (SELECT B.MLHLOGINDATETIME FROM TBMLH_MEMBERLOGINHISTORY B WHERE B.MLHUSERID = A.USER_ID ORDER BY B.MLHIDX DESC LIMIT 1) AS lastLoginDate
            FROM TA_USER A
            WHERE 1=1
            ]]>
        <include refid="UserMember-where" />
        <include refid="UserMember-order" />
        <if test='noLimit != "Y"'>
        <![CDATA[
            LIMIT #{firstIndex}, #{recordCountPerPage}
            ]]>
        </if>
    </select>
    <select id="findAllUserMember2" parameterType="zvl" resultType="zvl" >
        <![CDATA[
            /*findAllUserMember2*/
            SELECT  A.*,  
                    COALESCE(IF(NULLIF(A.USER_BDATE, ' ') IS NULL, NULL, A.USER_BDATE), DATE_FORMAT(A.USER_CDATE, '%Y-%m-%d')) AS userBCdate,
                    FN_GET_CODE_NAME('CM05', A.CENTER_CODE) AS centerCodeName,
                    FN_GET_CODE_NAME('CDOP', A.USER_GROUP) AS userGroupName,
                    FN_GET_CODE_NAME('USLV', A.USER_LEVEL) AS userLevelName,
                    FN_GET_CODE_NAME('USST', A.USER_STATE) AS userStateName 
            FROM TA_USER A
            WHERE 1=1 
            ]]>
        <include refid="UserMember-where" />
        <include refid="UserMember-order" />
        <if test='noLimit != "Y"'>
        <![CDATA[
            LIMIT #{firstIndex}, #{recordCountPerPage}
            ]]>
        </if>
    </select>
    
    <select id="findOneUserMember" parameterType="zvl" resultType="zvl">
        <![CDATA[
            SELECT
                A.*, 
                FN_GET_CODE_NAME('CM05', A.CENTER_CODE) AS centerCodeName,
                FN_GET_CODE_NAME('CM05', A.CENTER_CODE2) AS centerCode2Name,
                FN_GET_CODE_NAME('CM05', A.CENTER_CODE3) AS centerCode3Name,
                FN_GET_CODE_NAME('CDOP', A.USER_GROUP) AS userGroupName,
                FN_GET_CODE_NAME('USLV', A.USER_LEVEL) AS userLevelName, 
                FN_GET_CODE_NAME('CM04', SUBSTR(A.CENTER_CODE, 1, 1)) AS centerGbn,
                FN_GET_CODE_NAME('CM04', SUBSTR(A.CENTER_CODE2, 1, 1)) AS centerGbn2,
                FN_GET_CODE_NAME('CM04', SUBSTR(A.CENTER_CODE3, 1, 1)) AS centerGbn3,
                FN_GET_CODE_NAME('USST', A.USER_STATE) AS userStateName, 
                FN_GET_CODE_NAME('MF', A.USER_SEX) AS userSexName,
                SUBSTR(A.CENTER_CODE, 1, 1) AS centerGbnCode,
                SUBSTR(A.CENTER_CODE2, 1, 1) AS centerGbnCode2,
                SUBSTR(A.CENTER_CODE3, 1, 1) AS centerGbnCode3
            FROM TA_USER A
            WHERE
                A.USER_ID = #{userId}
        ]]>
    </select>

    <insert id="saveUserMember" parameterType="zvl">
        <!-- <selectKey resultType="Integer" order="BEFORE" keyProperty="userSn">
            SELECT IFNULL(MAX(USER_SN),0)+1 AS USER_SN FROM TM_USER_PIN
        </selectKey> -->
        <![CDATA[
             INSERT INTO TA_USER (
                  USER_ID
                , USER_PASSWORD
                , USER_NAME
                , CENTER_CODE
                , USER_STATE
                , USER_PHONE
                , USER_SEX
                , USER_LEVEL
                , USER_CDATE
                , USER_BDATE
                , USER_EDATE
                , USER_BIRTH
                , USER_GROUP
                , USER_DEPARTMENT
                , USER_POSITION
                , USER_EMAIL
                , USER_NUMBER
                , USER_PDATE
                , USER_PASSWORD_DERIVE_DATE
                , CENTER_CODE2
                , CENTER_CODE3
             )
            VALUES (
                  #{userId}
                , #{userPassword}
                , #{userName}
                , #{centerCode}
                , 'Y'
                , #{userPhone}
                , #{userSex}
                , #{userLevel}
                , NOW()
                , #{userBdate}
                , #{userEdate}
                , #{userBirth}
                , #{userGroup}
                , #{userDepartment}
                , #{userPosition}
                , #{userEmail}
                , #{userNumber}
                , NOW()
                , NOW()
                , #{centerCode2}
                , #{centerCode3}
            )
        ]]>
    </insert>

    <update id="updateUserMember" parameterType="zvl">
    <!--                ,USER_CDATE = NOW()
                        ,USER_PDATE = NOW()
                        ,CENTER_CODE = #{centerCode}
     -->
        <![CDATA[
             UPDATE TA_USER
             SET
                  USER_NAME = #{userName}
                 ,USER_STATE = #{userState}
                 ,USER_PHONE = #{userPhone}
                 ,USER_SEX = #{userSex}
                 ,USER_LEVEL = #{userLevel}
                 ,USER_BDATE = #{userBdate}
                 ,USER_EDATE = #{userEdate}
                 ,USER_BIRTH = #{userBirth}
                 ,USER_GROUP = #{userGroup}
                 ,USER_DEPARTMENT = #{userDepartment}
                 ,USER_POSITION = #{userPosition}
                 ,USER_EMAIL = #{userEmail}
                 ,USER_NUMBER = #{userNumber}
                 ,CENTER_CODE = #{centerCode}
                 ,CENTER_CODE2 = #{centerCode2}
                 ,CENTER_CODE3 = #{centerCode3}
                 
        ]]>
        <if test='userPassword != null and userPassword != ""'>
            <![CDATA[   ,USER_PASSWORD = #{userPassword}        
                    ,USER_PASSWORD_DERIVE_DATE = NOW()
            ]]>
        </if>
        <![CDATA[
             WHERE USER_ID = #{userId}
        ]]>
    </update>
    
    <update id="initPW" parameterType="zvl">
        <![CDATA[
             UPDATE TA_USER SET USER_PASSWORD = #{initPW} 
             WHERE USER_ID = #{userId}
        ]]>
    </update>

    <delete id="deleteUserMember" parameterType="zvl">
        <![CDATA[
             DELETE FROM TA_USER
             WHERE USER_ID = #{userId}
        ]]>
    </delete>

    <delete id="deleteUserPin" parameterType="zvl">
        <![CDATA[
             DELETE FROM TM_USER_PIN
             WHERE USER_SN = #{userSn}
        ]]>
    </delete>

    <select id="countUserMemberByUserId" parameterType="string" resultType="long" >
        <![CDATA[
          /*countUserMemberByUserId*/
          SELECT COUNT(USER_ID) AS USER_ID_CNT 
          FROM TA_USER
          WHERE USER_ID = #{userId};

        ]]>
    </select>

    <!-- 아이디 중복체크(휴면계정에서 찾기) : 해당 테이블의 별도의 DB에 존재할 경우 해당 쿼리를 해당 DB으로 변경 -->
    <select id="countUserDrmncyByUserId" parameterType="string" resultType="long" >
        <![CDATA[
            /* countUserDrmncyByUserId */
            SELECT COUNT(USER_ID) AS USER_ID_CNT
            FROM TM_USER_DRMNCY
            WHERE USER_ID = #{userId}
        ]]>
    </select>

    <!-- 아이디 찾기(휴면계정에서 찾기) : 해당 테이블의 별도의 DB에 존재할 경우 해당 쿼리를 해당 DB으로 변경 -->
    <select id="idSearchFinishDrmncy" parameterType="string" resultType="long" >
        <![CDATA[
            /* idSearchFinishDrmncy */
            SELECT
                A.USER_ID
                , A.USER_NM
                , B.USER_PIN
            FROM TM_USER_DRMNCY A
            LEFT OUTER JOIN TM_USER_PIN B ON B.USER_SN = A.USER_SN
            WHERE 1 = 1
            AND B.USER_PIN = #{userPin}
        ]]>
    </select>

    <!-- 비밀번호 찾기(휴면계정에서 찾기) : 해당 테이블의 별도의 DB에 존재할 경우 해당 쿼리를 해당 DB으로 변경 -->
    <select id="findOneUserDrmncyIdSearchFinish" parameterType="string" resultType="long" >
        <![CDATA[
            /* findOneUserDrmncyIdSearchFinish */
            SELECT
                A.USER_ID
                , A.USER_NM
                , B.USER_PIN
            FROM TM_USER_DRMNCY A
            LEFT OUTER JOIN TM_USER_PIN B ON B.USER_SN = A.USER_SN
            WHERE 1 = 1
            AND B.USER_PIN = #{userPin}
        ]]>
    </select>




    <select id="countUserMemberByUserPin" parameterType="string" resultType="long" >
        <![CDATA[
            /* countUserMemberByUserPin */
            SELECT COUNT(USER_SN)
            FROM TM_USER_PIN
            WHERE USER_PIN = #{userPin}
        ]]>
    </select>

    <select id="findOneUserMemberByUserPin" parameterType="zvl" resultType="zvl" >
        <![CDATA[
            /* findOneUserMemberByUserPin */
            SELECT *
            FROM TM_USER_PIN
            WHERE USER_PIN = #{userPin}
        ]]>
    </select>

    <select id="countUserMemberByUserPinId" parameterType="string" resultType="long" >
        <![CDATA[
            /* countUserMemberByUserPinId */
            SELECT COUNT(A.USER_PIN) FROM TM_USER_PIN A, TM_USER_INFO B
            WHERE A.USER_SN = B.USER_SN
            AND A.USER_PIN = #{userPin}
        ]]>
    </select>

    <select id="findOneUserMemberByUserPinInfo" parameterType="string" resultType="zvl" >
        <![CDATA[
            /* findOneUserMemberByUserPinInfo */
            SELECT A.USER_SN, A.USER_PIN, A.USER_NM, B.USER_ID FROM TM_USER_PIN A, TM_USER_INFO B
            WHERE A.USER_SN = B.USER_SN
            AND A.USER_PIN = #{userPin}
        ]]>
    </select>

    <insert id="saveUserMemberUserPin" parameterType="zvl">
        <selectKey resultType="Integer" order="BEFORE" keyProperty="userSn">
            SELECT IFNULL(MAX(USER_SN),0)+1 AS USER_SN FROM TM_USER_PIN
        </selectKey>
        <![CDATA[
            INSERT INTO TM_USER_PIN (
                USER_SN
                , USER_PIN
                , USER_NM
                , CRTFC_SE_CD
                , CHLD_CRTFC_AT
                , REGIST_DT
                , UPDT_DT
                , BRTHDY
                , SEX_CD
                , SITE_SE_CD
             )
            VALUES (
                #{userSn}
                , #{userPin}
                , #{userNm}
                , #{crtfcSeCd}
                , #{chldCrtfcAt}
                , NOW()
                , NOW()
                , #{brthdy}
                , #{sexCd}
                , #{siteSeCd}
            )
        ]]>
    </insert>

    <select id="findOneUserMemberUserPin" resultType="zvl">
        <![CDATA[
            SELECT
                USER_SN
                , USER_PIN
                , USER_NM
                , CRTFC_SE_CD
                , CHLD_CRTFC_AT
                , REGIST_DT
                , UPDT_DT
                , BRTHDY
                , SEX_CD
            FROM TM_USER_PIN
            WHERE A.USER_PIN = #{userPin}
        ]]>
    </select>

    <select id="findOneUserMemberLoginInfo" resultType="zvl">
        <![CDATA[
            SELECT A.USER_ID AS username,
                   A.USER_NM,
                   A.USER_SN,
                   A.PASSWORD,
                   A.STTUS_CD,
                   NOW()>DATE_ADD(ifnull(PASSWORD_CHANGE_DT,REGIST_DT), INTERVAL +6 MONTH) AS  PASSWORD_CHANGE_AT,
                   CASE WHEN PASSWORD_DERIVE_DT IS NULL THEN 1 ELSE  NOW()>DATE_ADD(PASSWORD_DERIVE_DT, INTERVAL +3 MONTH) END PASSWORD_DERIVE_AT
            FROM TM_USER_INFO A
            WHERE A.USER_ID = #{username}
        ]]>
    </select>

    <!-- 휴면계정에서 사용자 정보 찾기 : DB 분리인 경우 감안하여 작업 -->
    <select id="findOneUserDrmncyMemberLoginInfo" resultType="zvl">
        <![CDATA[
            SELECT A.USER_ID AS username,
                   A.USER_NM,
                   A.USER_SN,
                   A.PASSWORD,
                   A.STTUS_CD,
                   NOW()>DATE_ADD(ifnull(PASSWORD_CHANGE_DT,REGIST_DT), INTERVAL +6 MONTH) AS  PASSWORD_CHANGE_AT,
                   CASE WHEN PASSWORD_DERIVE_DT IS NULL THEN 1 ELSE  NOW()>DATE_ADD(PASSWORD_DERIVE_DT, INTERVAL +3 MONTH) END PASSWORD_DERIVE_AT
            FROM TM_USER_DRMNCY A
            WHERE A.USER_ID = #{username}
        ]]>
    </select>

    <select id="findOneMemberLoginSaltInfo" resultType="zvl">
        <![CDATA[
            SELECT A.SALT
            FROM TM_USER_SALT A
            WHERE A.USER_ID = #{username}
        ]]>
        <choose>
            <when test='userSe != null and userSe != ""'><![CDATA[AND USER_SE = #{userSe}]]></when>
            <otherwise><![CDATA[AND USER_SE='U']]></otherwise>
        </choose>
    </select>

    <update id="updateUserMemberLastLoginDt" parameterType="zvl" >
        <![CDATA[
            UPDATE TM_USER_INFO SET
                LAST_LOGIN_DT = NOW()
            WHERE USER_ID = #{userId}
        ]]>
    </update>

    <update id="updateUserMemberPasswordDeriveDt" parameterType="zvl">
        <![CDATA[
            UPDATE TM_USER_INFO
            SET PASSWORD_DERIVE_DT = NOW()
            WHERE USER_ID = #{userId}
        ]]>
    </update>

    <update id="updateUserMemberPassword" parameterType="zvl">
        <![CDATA[
            UPDATE TM_USER_INFO
            SET PASSWORD = #{encodedPassword}, PASSWORD_CHANGE_DT = NOW()
            WHERE USER_ID = #{userId}
        ]]>
    </update>

    <update id="updateUserMemberPasswordByUserSn" parameterType="zvl">
        <![CDATA[
            UPDATE TM_USER_INFO
            SET PASSWORD = #{encodedPassword}, PASSWORD_CHANGE_DT = NOW()
            WHERE USER_SN = #{userSn}
        ]]>
    </update>

    <update id="updateUserMemberSttusCd" parameterType="zvl">
        <![CDATA[
            UPDATE TM_USER_INFO
            SET STTUS_CD = #{sttusCd}
            WHERE USER_ID = #{userId}
        ]]>
    </update>

    <select id="selectStringUserMemberIdSearchRequest" parameterType="zvl" resultType="string">
        <![CDATA[
            SELECT
                A.USER_ID
                , A.USER_EMAD
                , B.USER_PIN
            FROM TM_USER_INFO A
            LEFT OUTER JOIN TM_USER_PIN B ON B.USER_SN = A.USER_SN
            WHERE 1 = 1
        ]]>
        <if test='userNm != null and userNm != ""'>
            <![CDATA[   AND A.USER_NM = #{userNm}   ]]>
        </if>
        <if test='userEmad != null and userEmad != ""'>
            <![CDATA[   AND A.USER_EMAD = #{userEmad}   ]]>
        </if>
        <if test='userPin != null and userPin != ""'>
            <![CDATA[   AND B.USER_PIN = #{userPin} ]]>
        </if>
    </select>

    <select id="findOneUserMemberIdPwdSearchRequest" parameterType="zvl" resultType="zvl">
        <![CDATA[
            SELECT
                A.USER_ID
                , A.USER_EMAD
                , B.USER_PIN
            FROM TM_USER_INFO A
            LEFT OUTER JOIN TM_USER_PIN B ON B.USER_SN = A.USER_SN
            WHERE 1 = 1
        ]]>
        <if test='userNm != null and userNm != ""'>
            <![CDATA[   AND A.USER_NM = #{userNm}   ]]>
        </if>
        <if test='userId != null and userId != ""'>
            <![CDATA[   AND A.USER_ID = #{userId}   ]]>
        </if>
        <if test='userEmad != null and userEmad != ""'>
            <![CDATA[   AND A.USER_EMAD = #{userEmad}   ]]>
        </if>
        <if test='userPin != null and userPin != ""'>
            <![CDATA[   AND B.USER_PIN = #{userPin} ]]>
        </if>
    </select>

    <select id="findOneUserMemberIdSearchFinish" parameterType="zvl" resultType="zvl">
        <![CDATA[
            SELECT
                A.USER_ID
                , A.USER_NM
                , B.USER_PIN
            FROM TM_USER_INFO A
            LEFT OUTER JOIN TM_USER_PIN B ON B.USER_SN = A.USER_SN
            WHERE 1 = 1
            AND B.USER_PIN = #{userPin}
        ]]>
    </select>

    <insert id="saveUserMemberSecsn" parameterType="zvl" >
        <selectKey resultType="Integer" order="BEFORE" keyProperty="mnno">
            SELECT IFNULL(MAX(MNNO),0)+1 AS MNNO FROM TM_USER_SECSN
        </selectKey>
        <![CDATA[
            INSERT INTO TM_USER_SECSN (
                MNNO, USER_ID, USER_NM, USER_SECSN_DT, USER_SECSN_MEMO
            )
            VALUES (
                #{mnno}, #{userId}, #{userNm}, NOW(), #{userSecsnMemo}
            )
        ]]>
    </insert>

    <update id="updateUserPinInfo" parameterType="zvl">
        <![CDATA[
            UPDATE TM_USER_PIN
            SET SEX_CD = #{sexCd}
            , BRTHDY = #{brthdy}
            WHERE USER_PIN = #{userPin}
        ]]>
    </update>

    <delete id="deleteMemberSaltInfo" parameterType="zvl">
        <![CDATA[
            DELETE FROM TM_USER_SALT
            WHERE USER_ID = #{userId}
            AND USER_SE = #{userSe}
        ]]>
    </delete>

    <insert id="saveMemberSalfInfo" parameterType="zvl" >
        <selectKey resultType="Integer" order="BEFORE" keyProperty="userNo">
            SELECT IFNULL(MAX(USER_NO),0)+1 AS USER_NO FROM TM_USER_SALT
        </selectKey>
        <![CDATA[
            INSERT INTO TM_USER_SALT (
                USER_NO, USER_SN, SALT, USER_SE, USER_ID, USER_NM, REGIST_DT
            )
            VALUES (
                #{userNo}, #{userSn}, #{salt} , #{userSe}, #{userId}, #{userNm}, NOW()
            )
        ]]>
    </insert>

    <update id="unlockUser" parameterType="zvl">
        <![CDATA[
            UPDATE TB_USER_LOGIN 
                SET LOGIN_FAIL_COUNT = 0
                ,UNLOCK_DATE = NOW()
                WHERE USER_ID=#{userId}
                 
        ]]>
    </update>
    
    <select id="selectLockedUser" parameterType="zvl" resultType="zvl">
        <![CDATA[
            SELECT B.*, 
                  FN_GET_CODE_NAME('CM05', A.CENTER_CODE) AS centerCodeName,
                  A.USER_NAME,
                  A.USER_PHONE
            FROM TB_USER_LOGIN B
            LEFT OUTER JOIN TA_USER A ON B.USER_ID = A.USER_ID
            WHERE 1 = 1
            AND B.LOGIN_FAIL_COUNT >= (SELECT A.PASSWORD_RETRY_CO
                                       FROM TB_LOGIN_POLICY A)
        ]]>
        <include refid="UserMember-where" />
        <if test='noLimit != "Y"'>
        <![CDATA[
        limit #{firstIndex}, #{recordCountPerPage}
        ]]>
        </if>
    </select>
    
    <select id="totalLockUser" parameterType="zvl" resultType="long">
        <![CDATA[
            SELECT COUNT(*) AS totcnt
            FROM TB_USER_LOGIN B
            LEFT OUTER JOIN TA_USER A ON B.USER_ID = A.USER_ID
            WHERE 1 = 1
            AND B.LOGIN_FAIL_COUNT >= (SELECT A.PASSWORD_RETRY_CO
                                       FROM TB_LOGIN_POLICY A)
        ]]>
        <include refid="UserMember-where" />
    </select>
    
     <select id="selectUserLoginHistory" parameterType="zvl" resultType="zvl">
        <![CDATA[
            SELECT B.*
            FROM TBMLH_MEMBERLOGINHISTORY B
            LEFT OUTER JOIN TA_USER A ON B.MLHUSERID = A.USER_ID
            WHERE 1=1
            ]]>
            <if test='loginAuthorCd != "ROLE_SUPER"'>
                AND A.USER_LEVEL != 'ROLE_SUPER'
            </if>   
        <!-- ]]> -->
        <include refid="UserMember-where" />
        <if test="sdate1 != null and sdate1 != ''">
            <![CDATA[   AND DATE_FORMAT(B.MLHLOGINDATETIME, '%Y%m%d') >= REPLACE(#{sdate1},'-','')       ]]>
        </if>
        <if test="edate1 != null and edate1 != ''">
            <![CDATA[   AND DATE_FORMAT(B.MLHLOGINDATETIME, '%Y%m%d') <= REPLACE(#{edate1},'-','')       ]]>
        </if>
        <![CDATA[
        ORDER BY MLHLOGINDATETIME DESC
        ]]>
        <if test='noLimit != "Y"'>
        <![CDATA[
        LIMIT #{firstIndex}, #{recordCountPerPage}
        ]]>
        </if>
    </select>
    
    <select id="selectUserActionHistory" parameterType="zvl" resultType="zvl">
        <![CDATA[
            SELECT B.CASE_SEQ,
                   B.CH_USER_ID,
                   B.CH_USER_NM,
                   B.CH_DATE,
                   B.CH_GROUP,
                   B.CH_ACTION,
                   B.CH_MEMO,
                   FN_GET_CODE_NAME('hscd', B.CH_GROUP) CH_GROUP_NAME,
                   FN_GET_CODE_NAME('hsce', B.CH_ACTION) CH_ACTION_NAME,
                   FN_GET_CODE_NAME('CM05', A.CENTER_CODE) CENTER_CODE_NAME,
                   A.USER_NAME AS CH_USER_NAME,
                   C.CASE_NUMBER AS CASE_NUMBER
            FROM TA_CASE_HISTORY B
            LEFT JOIN TA_USER A ON B.CH_USER_ID = A.USER_ID 
            LEFT JOIN TA_CASE C ON B.CASE_SEQ = C.CASE_SEQ
            WHERE 1=1
        ]]>
        <include refid="UserMember-where" />
        
        <if test="sdate1 != null and sdate1 != ''">
            <![CDATA[   AND DATE_FORMAT(B.CH_DATE, '%Y%m%d') >= REPLACE(#{sdate1},'-','')       ]]>
        </if>
        <if test="edate1 != null and edate1 != ''">
            <![CDATA[   AND DATE_FORMAT(B.CH_DATE, '%Y%m%d') <= REPLACE(#{edate1},'-','')       ]]>
        </if>
        <if test='noLimit != "Y"'>
        <![CDATA[
        ORDER BY CH_DATE DESC
        limit #{firstIndex}, #{recordCountPerPage}
        ]]>
        </if>
    </select>
    
    <select id="countUserActionHistory" parameterType="zvl" resultType="long">
        <![CDATA[
            SELECT COUNT(*) AS totcnt
            FROM TA_CASE_HISTORY B
            LEFT OUTER JOIN TA_USER A ON B.CH_USER_ID = A.USER_ID
            WHERE 1=1
        ]]>
        <include refid="UserMember-where" />
        
        <if test="sdate1 != null and sdate1 != ''">
            <![CDATA[   AND DATE_FORMAT(B.CH_DATE, '%Y%m%d') >= REPLACE(#{sdate1},'-','')       ]]>
        </if>
        <if test="edate1 != null and edate1 != ''">
            <![CDATA[   AND DATE_FORMAT(B.CH_DATE, '%Y%m%d') <= REPLACE(#{edate1},'-','')       ]]>
        </if>
    </select>
        <select id="selectDownloadHistory" parameterType="zvl" resultType="zvl">
        <![CDATA[
           SELECT  B.SH_SEQ,
			       B.SH_GROUP,
			       B.SH_DATE,
			       B.SH_USER_ID,
			       B.SH_MENU_NM,
			       B.SH_DATA_NM,
			       B.SH_MEMO,
                   FN_GET_CODE_NAME('CM05', A.CENTER_CODE) CENTER_CODE_NAME,
                   A.USER_NAME AS SH_USER_NAME
			FROM TA_DOWNLOAD_HISTORY B
			LEFT JOIN TA_USER A ON B.SH_USER_ID = A.USER_ID 
            WHERE 1=1
                        AND B.SH_GROUP = #{shGroup}
        ]]>
        <include refid="UserMember-where" />
        <if test="sdate1 != null and sdate1 != ''">
            <![CDATA[   AND DATE_FORMAT(B.SH_DATE, '%Y%m%d') >= REPLACE(#{sdate1},'-','')       ]]>
        </if>
        <if test="edate1 != null and edate1 != ''">
            <![CDATA[   AND DATE_FORMAT(B.SH_DATE, '%Y%m%d') <= REPLACE(#{edate1},'-','')       ]]>
        </if>
        <![CDATA[
        ORDER BY SH_DATE DESC
        ]]>
        <if test='noLimit != "Y"'>
        <![CDATA[
        LIMIT #{firstIndex}, #{recordCountPerPage}
        ]]>
        </if>
    </select>
    
    <select id="countDownloadHistory" parameterType="zvl" resultType="long">
        <![CDATA[
            SELECT COUNT(*) AS totcnt
            FROM TA_DOWNLOAD_HISTORY B
            LEFT OUTER JOIN TA_USER A ON B.SH_USER_ID = A.USER_ID
            WHERE 1=1
                        AND B.SH_GROUP = #{shGroup}
        ]]>
        <include refid="UserMember-where" />
        <if test="sdate1 != null and sdate1 != ''">
            <![CDATA[   AND DATE_FORMAT(B.SH_DATE, '%Y%m%d') >= REPLACE(#{sdate1},'-','')       ]]>
        </if>
        <if test="edate1 != null and edate1 != ''">
            <![CDATA[   AND DATE_FORMAT(B.SH_DATE, '%Y%m%d') <= REPLACE(#{edate1},'-','')       ]]>
        </if>
    </select>
    
    <insert id="saveDownloadHistory" parameterType="zvl">
     <selectKey resultType="Integer" order="BEFORE" keyProperty="shSeq">
            SELECT IFNULL(MAX(SH_SEQ),0)+1 AS SH_SEQ FROM TA_DOWNLOAD_HISTORY
        </selectKey>
        <![CDATA[
        /* saveDownloadHistory */
                INSERT INTO TA_DOWNLOAD_HISTORY (
                  SH_SEQ,SH_GROUP,SH_DATE,SH_USER_ID,SH_MENU_NM,SH_DATA_NM,SH_MEMO 
                ) values (
                              #{shSeq    }
                            , #{shGroup  }
                            , NOW()
                            , #{shUserId }
                            , #{shMenuNm }
                            , #{shDataNm }
                            , #{shMemo   }
                ) 
        ]]>
    </insert>
    
    <!-- 출력 이력 조회 -->
    <select id="selectPrintHistory" parameterType="zvl" resultType="zvl">
        <![CDATA[
        /*findPrintHistory*/
        SELECT B.PH_SEQ,
               B.CASE_SEQ,
               B.PH_GROUP,
               B.PH_USER_ID,
               B.PH_CDATE,
               B.PH_NAME,
               B.PH_USER_NAME,
               B.PH_GROUP_SEQ,
               FN_GET_CODE_NAME('CM05', A.CENTER_CODE) CENTER_CODE_NAME,
               A.USER_NAME AS SH_USER_NAME,
               C.CASE_NUMBER AS CASE_NUMBER
        FROM TA_PRINT_HISTORY B
               LEFT JOIN TA_USER A ON B.PH_USER_ID = A.USER_ID 
               LEFT JOIN TA_CASE C ON B.CASE_SEQ = C.CASE_SEQ
               WHERE 1=1
               AND B.CASE_SEQ IS NULL
        ]]>
        <include refid="UserMember-where" />
        <if test="sdate1 != null and sdate1 != ''">
            <![CDATA[   AND DATE_FORMAT(B.PH_CDATE, '%Y%m%d') >= REPLACE(#{sdate1},'-','')       ]]>
        </if>
        <if test="edate1 != null and edate1 != ''">
            <![CDATA[   AND DATE_FORMAT(B.PH_CDATE, '%Y%m%d') <= REPLACE(#{edate1},'-','')       ]]>
        </if>
        <if test='noLimit != "Y"'>
        <![CDATA[
        ORDER BY PH_CDATE DESC
        limit #{firstIndex}, #{recordCountPerPage}
        ]]>
        </if>
    </select>
    
    <!-- 출력 이력 건수 -->
    <select id="getPrintHistory" parameterType="zvl" resultType="long">
        <![CDATA[
        /* getPrintHistory */
        SELECT COUNT(*) AS totcnt
          FROM TA_PRINT_HISTORY B
          LEFT JOIN TA_USER A ON B.PH_USER_ID = A.USER_ID 
               WHERE 1=1
               AND B.CASE_SEQ IS NULL
        ]]>
        <include refid="UserMember-where" />
        <if test="sdate1 != null and sdate1 != ''">
            <![CDATA[   AND DATE_FORMAT(B.PH_CDATE, '%Y%m%d') >= REPLACE(#{sdate1},'-','')       ]]>
        </if>
        <if test="edate1 != null and edate1 != ''">
            <![CDATA[   AND DATE_FORMAT(B.PH_CDATE, '%Y%m%d') <= REPLACE(#{edate1},'-','')       ]]>
        </if>
    </select>
     <insert id="insertPrintHistory" parameterType="zvl">
     <selectKey resultType="Integer" order="BEFORE" keyProperty="phSeq">
            SELECT IFNULL(MAX(PH_SEQ),0)+1 AS PH_SEQ FROM TA_PRINT_HISTORY
        </selectKey>
        <![CDATA[
        /* insertPrintHistory */
                INSERT INTO TA_PRINT_HISTORY (
                  PH_SEQ,PH_USER_ID,PH_USER_NAME,CASE_SEQ,PH_NAME,PH_GROUP,PH_GROUP_SEQ,PH_CDATE 
                ) values (
                              #{phSeq     }
                            , #{userId    }
                            , #{userName  } 
                            , #{caseSeq   }
                            , #{phName    }
                            , #{phGroup   }
                            , #{phGroupSeq}
                            , NOW()
                ) 
        ]]>
    </insert>
    
    
    <update id="updateUserPassword" parameterType="zvl">
        UPDATE ta_user SET
            USER_PASSWORD = #{newPassword}
            ,USER_PDATE = NOW()
            ,USER_PASSWORD_DERIVE_DATE = NOW()
        WHERE USER_ID = #{userId}
        AND USER_PASSWORD = #{oldPassword}
    </update>

    <select id="totalUserLoginHistory" parameterType="zvl" resultType="long">
        <![CDATA[
            SELECT COUNT(*) AS totcnt
            FROM TBMLH_MEMBERLOGINHISTORY B
            LEFT OUTER JOIN TA_USER A ON B.MLHUSERID = A.USER_ID
            WHERE 1=1
        ]]>
        <if test='loginAuthorCd != "ROLE_SUPER"'>
            AND A.USER_LEVEL != 'ROLE_SUPER'
        </if>   
        <include refid="UserMember-where" />
        <if test="sdate1 != null and sdate1 != ''">
            <![CDATA[   AND DATE_FORMAT(B.MLHLOGINDATETIME, '%Y%m%d') >= REPLACE(#{sdate1},'-','')       ]]>
        </if>
        <if test="edate1 != null and edate1 != ''">
            <![CDATA[   AND DATE_FORMAT(B.MLHLOGINDATETIME, '%Y%m%d') <= REPLACE(#{edate1},'-','')       ]]>
        </if>
    </select>
    
    <!-- 내 정보 수정 -->
    <update id="updateUserMemberMypage" parameterType="zvl">
        <![CDATA[
             UPDATE TA_USER
             SET
                  USER_NAME = #{userName}
                 ,USER_PHONE = #{userPhone}
                 ,USER_SEX = #{userSex}
                 ,USER_BDATE = #{userBdate}
                 ,USER_EDATE = #{userEdate}
                 ,USER_BIRTH = #{userBirth}
                 ,USER_DEPARTMENT = #{userDepartment}
                 ,USER_POSITION = #{userPosition}
                 ,USER_EMAIL = #{userEmail}
                 ,USER_NUMBER = #{userNumber}
                 ,CENTER_CODE = #{centerCode}
                 ,USER_PDATE = NOW()
        ]]>
        <if test='userPassword != null and userPassword != ""'>
            <![CDATA[
                     ,USER_PASSWORD = #{userPassword}
                     ,USER_PASSWORD_DERIVE_DATE = NOW()
            ]]>
        </if>
        <![CDATA[
            WHERE USER_ID = #{userId}
        ]]>
    </update>

    <insert id="insertUserLog" parameterType="zvl">
        <selectKey resultType="Integer" order="BEFORE" keyProperty="logSeq">
            SELECT IFNULL(MAX(LOG_SEQ),0)+1 AS LOG_SEQ  FROM TA_USER_LOG
        </selectKey>
        <![CDATA[
        /* insertUserLog */
        
        INSERT INTO TA_USER_LOG (LOG_SEQ, USER_ID, USER_NAME, LOG_CATE, REG_ID, REG_NAME, LOG_PDATE)
        VALUES (#{logSeq}, #{userId}, #{userName}, #{logCate}, #{regUserId}, #{regUserName}, NOW())
        ]]>
    </insert>
</mapper>
