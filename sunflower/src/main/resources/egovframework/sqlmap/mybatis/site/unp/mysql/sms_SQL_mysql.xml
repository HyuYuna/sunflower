<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="site.unp.dao.system.sms">

	<sql id="findAllSms-where">
		<choose>
			<when test='authorCd == "ROLE_SUPER" or authorCd == "CA"'>
			</when>
			<otherwise>
				<if test='smsGroupId != null and smsGroupId != ""'>
					<![CDATA[	AND s.GROUP_ID = CONCAT('sun_',#{smsGroupId}) 		]]>
				</if>
			</otherwise>
		</choose>
		<if test='srcCntrGbn != null and srcCntrGbn != ""'>
			<![CDATA[	AND s.GROUP_ID LIKE CONCAT('sun_',#{srcCntrGbn},'%') 		]]>
		</if>
		<if test='srcCntrCod != null and srcCntrCod != ""'>
			<![CDATA[	AND s.GROUP_ID = CONCAT('sun_',#{srcCntrCod}) 		]]>
		</if>
		<if test='caseSeq != null and caseSeq != ""'>
			<![CDATA[	AND CASE_SEQ = #{caseSeq} 		]]>
		</if>
	</sql>
	
	<sql id="findAllSms-order">
		<choose>
			<when test='orderSmsType == "ASC"'>
				<![CDATA[ORDER BY SMS_TYPE ASC, SEND_DATE DESC]]>
			</when>
			<when test='orderSmsType == "DESC"'>
				<![CDATA[ORDER BY SMS_TYPE DESC, SEND_DATE DESC]]>
			</when>
			<otherwise>
				<![CDATA[ ORDER BY SEND_DATE DESC]]>
			</otherwise>
		</choose>
	</sql>
	
	<!-- SMS 목록 -->
	<select id="findAllSms" parameterType="zvl" resultType="zvl">
		<![CDATA[
			/* findAllSms */

			SELECT	SEQ, GROUP_ID, USER_ID
					, FN_GET_CODE_NAME('CM05', SUBSTR(group_id, 5, 3)) AS GROUP_NAME
					, USER_NAME, R_NAME, R_PHONE, CASE SMS_TYPE WHEN '' THEN 'S' ELSE SMS_TYPE END as SMS_TYPE, SUBJECT
					, MSG_DATE, SEND_RESULT, SEND_PHONE, MSG, SEND_DATE
			FROM	TB_SMS s
			WHERE	s.GROUP_ID LIKE 'sun_%'
		]]>
		<include refid="findAllSms-where"/>
		<include refid="findAllSms-order"/>
		<![CDATA[
			limit #{firstIndex}, #{recordCountPerPage}
		]]>
	</select>

	<!-- 설문지 전체count수 -->
	<select id="countSms" parameterType="zvl" resultType="Long">
		<![CDATA[
			/* countSms  */
			
			SELECT  COUNT(SEQ) AS totCnt
			  FROM  TB_SMS s
			 WHERE  1 = 1
		]]>
		<include refid="findAllSms-where"/>
	</select>

	<!-- sms 폼 -->
	<select id="formSms" parameterType="zvl" resultType="zvl">
		<![CDATA[
			/* formSms  */
			
			SELECT	CODE_NAME2, CODE_SUBCODE
			FROM	TB_CODE
			WHERE	CODEG_CODE='CM05'
		]]>
		<if test=' smsCenterCode != null and smsCenterCode != ""'>
			<![CDATA[	AND CODE_CODE=#{smsCenterCode} ]]>
		</if>
	</select>
	
	<select id="getSmsListSelect" parameterType="zvl" resultType="zvl">
		<![CDATA[
			/* getSmsListSelect */
			
			SELECT	CC_SEQ, CASE_SEQ, CC_REL, CC_NAME, CC_PHONE
			FROM	TA_CASE_CONTACT
			WHERE	CASE_SEQ = #{caseSeq}
					AND CC_PHONE IS NOT NULL
		]]>
	</select>
	
	<select id="getSmsSenderSelect" parameterType="zvl" resultType="zvl">
		<![CDATA[
			/* getSmsSenderSelect */
			
			SELECT	CODE_NAME
			FROM	TB_CODE
			WHERE	CODEG_CODE = 'SMS'
					AND CODE_CODE LIKE CONCAT(#{smsCenterCode},'%')
					AND CODE_USE_YN = 'Y'
			ORDER BY CODE_SORT ASC
		]]>
	</select>
	
	<update id="smsSendResultUpdate" parameterType="zvl">
		<![CDATA[
			/* smsSendResultUpdate */
			
			UPDATE	TB_SMS SET SEND_RESULT = #{result}
			WHERE	SEQ = (SELECT MAX(SEQ) FROM TB_SMS WHERE GROUP_ID = #{smsGroupId} AND USER_ID = #{smsUserId})
		]]>
	</update>
	
	<select id="smsCount" parameterType="zvl" resultType="zvl">
		<![CDATA[
		/* smsCount */
		
		SELECT	CASE SMS_TYPE WHEN 'L' THEN (LENGTH(R_PHONE)-LENGTH(REPLACE(R_PHONE,',',''))+1) * 3 
				ELSE (LENGTH(R_PHONE)-LENGTH(REPLACE(R_PHONE,',',''))+1) END AS SMS_COUNT
		FROM	TB_SMS
		WHERE	SEQ = (SELECT MAX(SEQ) FROM TB_SMS WHERE GROUP_ID = #{smsGroupId} AND USER_ID=#{smsUserId})
		]]>
	</select>
	
	<update id="successSmsResultCountChange" parameterType="zvl">
		<![CDATA[
			/* successSmsResultCountChange */
		]]>
	</update>
	
	<insert id="smsDirectSuccessInsert" parameterType="zvl">
		<selectKey resultType="Integer" order="BEFORE" keyProperty="seq">
			SELECT IFNULL(MAX(SEQ),0)+1 AS SEQ FROM TB_SMS
		</selectKey>
		<![CDATA[
			/* smsDirectSuccessInsert */
			
			INSERT INTO TB_SMS (
				SEQ,
				GROUP_ID,
				USER_ID,
				USER_NAME,
				R_NAME,
				R_PHONE,
				SMS_TYPE,
				SUBJECT,
				MSG,
				SEND_DATE,
				SEND_PHONE,
				SEND_RESULT,
				CASE_SEQ
			) VALUES (
				#{seq},
				#{smsGroupId},
				#{smsUserId},
				#{smsUserName},
				#{rName},
				#{rPhones},
				#{smsType},
				#{subject},
				#{msg},
				now(),
				#{sendPhone},
				#{sendResult},
				#{caseSeq}
			)
		]]>
	</insert>
</mapper>