<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="site.unp.dao.schdul.schdul">

	<!-- 따로 일정 관리하는 전체 수 -->
    <select id="countSchdul" parameterType="zvl" resultType="Long">
            SELECT COUNT(*) totcnt
            FROM TB_SCHDUL_MNG A
            WHERE 1=1
    </select>

	<!-- 따로 관리하는 일정 목록 -->
	<select id="findAllSchdul" parameterType="zvl" resultType="zvl">
        <![CDATA[
        	/* findAllSchdul */
            SELECT  AA.*
            FROM  (
            	SELECT @RN:=@RN+1 AS RNUM, ALL_LIST.*
              	FROM  (
            		SELECT 
						A.SCHDUL_SN ,
						A.LCLAS,
						A.MLSFC,
						A.SCLAS,
						FN_GET_CODE_NAME('SCLAS', A.SCLAS) as SCLAS_NM,
						A.BGNDE,
						A.ENDDE,
						A.BASS_INFO,
						A.REGIST_ID ,
						A.REGIST_DT,
						A.PLACE_NM,
						A.TIME_BGNDE,
						A.TIME_ENDDE,
						A.OTHBC_SE,
						FN_GET_CODE_NAME('OTHBC_SE', A.OTHBC_SE) as OTHBC_SE_NM,
						A.SCHDUL_CL_CD
					FROM TB_SCHDUL_MNG A
			 LEFT OUTER JOIN TA_USER B
						 ON A.REGIST_ID = B.USER_ID
					WHERE 1=1
					AND (( CASE WHEN OTHBC_SE= '1' THEN A.REGIST_ID END) = #{loginId}
					OR	( CASE WHEN OTHBC_SE= '2' THEN B.CENTER_CODE END ) = #{centerCode}
					OR	( CASE WHEN OTHBC_SE= '3' THEN A.SCLAS END ) <> '9999')
        ]]>        	
        <![CDATA[
            		ORDER BY A.REGIST_DT DESC
				) ALL_LIST
			) AA
			LIMIT ${firstIndex}, ${recordCountPerPage}
        ]]>
    </select>

	<!-- 따로 관리하는 조회 by 일정일렬코드 -->
    <select id="findOneSchdul" resultType="zvl">
        <![CDATA[
        	/* findOneSchdul */
					SELECT 
						SCHDUL_SN ,
						LCLAS,
						MLSFC,
						SCLAS,
						FN_GET_CODE_NAME('SCLAS', SCLAS) as SCLAS_NM,
						BGNDE,
						ENDDE,
						BASS_INFO,
						REGIST_ID ,
						REGIST_DT ,
						PLACE_NM,
						TIME_BGNDE,
						TIME_ENDDE,
						OTHBC_SE,
						FN_GET_CODE_NAME('OTHBC_SE', OTHBC_SE) as OTHBC_SE_NM,
						SCHDUL_CL_CD
					FROM TB_SCHDUL_MNG
            WHERE SCHDUL_SN = #{schdulSn}
        ]]>
    </select>

	<!-- 따로관리하는 일정 등록 -->
    <insert id="saveSchdul" parameterType="zvl">
    	<selectKey resultType="Integer" order="BEFORE" keyProperty="schdulSn">
			SELECT IFNULL(MAX(SCHDUL_SN),0)+1 AS SCHDUL_SN  FROM TB_SCHDUL_MNG
		</selectKey>
        <![CDATA[
			/* saveSchdul */
			INSERT INTO TB_SCHDUL_MNG
                  ( 
                  	SCHDUL_SN,
                  	LCLAS,
					MLSFC,
					SCLAS,
					BGNDE,
					ENDDE,
					BASS_INFO,
					REGIST_ID ,
					REGIST_DT ,
					PLACE_NM,
					TIME_BGNDE,
					TIME_ENDDE,
					OTHBC_SE,
					SCHDUL_CL_CD
					 )
           	VALUES (
           			 #{schdulSn}
           		   , #{lclas}
                   , #{mlsfc}
                   , #{sclas}
                   , #{bgnde}
                   , #{endde}
                   , #{bassInfo}
                   , #{userId}
                   , NOW()
                   , #{placeNm}
                   , #{timeBgnde}
                   , #{timeEndde}
                   , #{othbcSe}
                   , #{schdulClCd}
                   )
        ]]>
    </insert>

	<!-- 따로 관리하는 일정 수정 -->
    <update id="modifySchdul" parameterType="zvl">
        <![CDATA[
        	/* modifySchdul */
            UPDATE TB_SCHDUL_MNG
               SET LCLAS = #{lclas},
				MLSFC = #{mlsfc},
				SCLAS = #{sclas},
				BGNDE = #{bgnde},
				ENDDE = #{endde},
				TIME_BGNDE = #{timeBgnde},
				TIME_ENDDE = #{timeEndde},
				OTHBC_SE = #{othbcSe},
				PLACE_NM = #{placeNm},
				BASS_INFO = #{bassInfo},
				REGIST_ID = #{userId},
				REGIST_DT = NOW(),
				SCHDUL_CL_CD = #{schdulClCd}
             WHERE SCHDUL_SN = #{schdulSn}
        ]]>
    </update>

	<!--따로 관리하는 일정 삭제 -->
    <delete id="deleteSchdul" parameterType="zvl">
        <![CDATA[
   		/* deleteSchdul */
          DELETE
          FROM TB_SCHDUL_MNG
          WHERE SCHDUL_SN = #{schdulSn}
        ]]>
    </delete>

	<!-- 따로 관리하는 일정 날짜 별  리스트 -->
    <select id="findSchdulDateList" parameterType="zvl" resultType="zvl">
	   <![CDATA[ 
 			/* findSchdulDateList */
			SELECT 
				A.SCHDUL_SN ,
				A.LCLAS,
				A.MLSFC,
				A.SCLAS,
				FN_GET_CODE_NAME('SCLAS', A.SCLAS) as SCLAS_NM,
				A.BGNDE,
				A.ENDDE,
				A.BASS_INFO,
				A.REGIST_ID ,
				A.REGIST_DT,
				A.PLACE_NM,
				A.TIME_BGNDE,
				A.TIME_ENDDE,
				A.OTHBC_SE,
				FN_GET_CODE_NAME('OTHBC_SE', A.OTHBC_SE) as OTHBC_SE_NM,
				A.SCHDUL_CL_CD
			FROM TB_SCHDUL_MNG A 
		LEFT OUTER JOIN TA_USER B
					ON A.REGIST_ID = B.USER_ID
			WHERE (A.BGNDE < #{schdulDate} OR A.BGNDE = #{schdulDate})
			AND (A.ENDDE > #{schdulDate} OR A.ENDDE = #{schdulDate})
			AND (( CASE WHEN OTHBC_SE= '1' THEN A.REGIST_ID END) = #{loginId}
			OR	( CASE WHEN OTHBC_SE= '2' THEN B.CENTER_CODE END ) = #{centerCode}
			OR	( CASE WHEN OTHBC_SE= '3' THEN A.SCLAS END ) <> '9999')
   	  ]]>
   	</select>
   	
	<!-- 일정 연도 별  리스트 -->
    <select id="findSchdulYearList" parameterType="zvl" resultType="zvl">
	   <![CDATA[ 
 			/* findSchdulYearList */
			SELECT 
				A.SCHDUL_SN ,
				A.LCLAS,
				A.MLSFC,
				A.SCLAS,
				FN_GET_CODE_NAME('SCLAS', A.SCLAS) as SCLAS_NM,
				SUBSTR(A.BGNDE,6,5) AS BGNDE,
				SUBSTR(A.ENDDE,6,5) AS ENDDE,
				A.BASS_INFO,
				A.REGIST_ID ,
				A.REGIST_DT,
				A.PLACE_NM,
				A.TIME_BGNDE,
				A.TIME_ENDDE,
				A.OTHBC_SE,
				FN_GET_CODE_NAME('OTHBC_SE', A.OTHBC_SE) as OTHBC_SE_NM,
				A.SCHDUL_CL_CD,
				SUBSTR(A.BGNDE,7,1) AS MONTH2,
				IF(SUBSTR(A.BGNDE,6,1)='0','',SUBSTR(A.BGNDE,6,1)) AS MONTH1
			FROM TB_SCHDUL_MNG A 
		LEFT OUTER JOIN TA_USER B
					ON A.REGIST_ID = B.USER_ID
			WHERE LEFT(A.BGNDE,4) = #{year}
			AND (( CASE WHEN OTHBC_SE= '1' THEN A.REGIST_ID END) = #{loginId}
			OR	( CASE WHEN OTHBC_SE= '2' THEN B.CENTER_CODE END ) = #{centerCode}
			OR	( CASE WHEN OTHBC_SE= '3' THEN A.SCLAS END ) <> '9999')
			ORDER BY A.BGNDE , A.ENDDE 
   	  ]]>
   	</select>	
   	
</mapper>
